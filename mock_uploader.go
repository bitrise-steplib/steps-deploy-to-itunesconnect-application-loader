// Code generated by mockery v2.53.3. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// mockUploader is an autogenerated mock type for the uploader type
type mockUploader struct {
	mock.Mock
}

// upload provides a mock function with no fields
func (_m *mockUploader) upload() (string, string, altoolResult, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for upload")
	}

	var r0 string
	var r1 string
	var r2 altoolResult
	var r3 error
	if rf, ok := ret.Get(0).(func() (string, string, altoolResult, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func() string); ok {
		r1 = rf()
	} else {
		r1 = ret.Get(1).(string)
	}

	if rf, ok := ret.Get(2).(func() altoolResult); ok {
		r2 = rf()
	} else {
		r2 = ret.Get(2).(altoolResult)
	}

	if rf, ok := ret.Get(3).(func() error); ok {
		r3 = rf()
	} else {
		r3 = ret.Error(3)
	}

	return r0, r1, r2, r3
}

// newMockUploader creates a new instance of mockUploader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockUploader(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockUploader {
	mock := &mockUploader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
